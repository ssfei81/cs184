# Test Scene 1 
# A simple quad viewed from different camera positions

size 500 500 
maxdepth 5
output sphere2.bmp

# Now specify the camera.  This is what you should implement.
# This file has 4 camera positions.  Render your scene for all 4.

camera 0 0 0 0 0 -3 0 1 0 45
#camera 0 0 4 0 0 0 0 1 0 30
#camera 0 -3 3 0 0 0 0 1 0 30
#camera -4 0 1 0 0 1 0 0 1 45
#camera -4 -4 4 1 0 0 0 1 0 30


# lighting/material definitions
# for initial testing, you should get the geometry right
# you may want to use dummy (constant) shading, ignoring these lines

#ambient .1 .1 .1
directional -0.57735027 0.57735027 0.57735027 1 1 1
directional -0.57735027  -0.57735027  0.57735027 0 0 1
#point 4 4 8 .5 .5 .5
#point -4 5 4 .5 .5 .5

# Now specify the geometry 
# Again, for initial testing, maybe you want to implement a dummy 
# ray-plane intersection routine, instead of reading this fully.
# Though it's probably simpler you just implement this, for later 
# parts of the assignment.


pushTransform
maxverts 3 


vertex 5.   5. -17
vertex 1.   4. -20 
vertex 6.  -1. -20

ambient 0.1  0.1  0.1
diffuse 0.1  0.1  0.1
specular 1.  1.  1.
reflection 1.  1.  1.
shininess 50.0
tri 0 1 2

ambient 0.1 0.1 0.1
diffuse 1 0 1
specular 1 1 1
reflection 0.0 0.0 0.0
shininess 50
sphere 0 0 -20 3

ambient 0.1 0.1 0.1
diffuse 1 1 0
specular 1 1 1
reflection 0.0 0.0 0.0
shininess 50
sphere -2 2 -15 1

ambient 0.1 0.1 0.1
diffuse 0 1 1
specular 1 1 1
reflection 0.0 0.0 0.0
shininess 50
sphere -2 -2 -15 1


